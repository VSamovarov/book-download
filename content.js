(async function () {
  try {
    // –ó–∞–≥—Ä—É–∂–∞–µ–º sites.json
    const response = await fetch(chrome.runtime.getURL('sites.json'))
    const sites = await response.json()

    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å–∞–π—Ç
    const currentUrl = window.location.origin

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–∞–π—Ç –≤ —Å–ø–∏—Å–∫–µ
    const site = sites.find(site => currentUrl.includes(new URL(site.url).origin))
    if (site) {
      const playList = await getPlayList(site.handler)
      if (playList) {
        addButton(playList)
      }
    } else {
      console.log('–≠—Ç–æ—Ç —Å–∞–π—Ç –Ω–µ –≤ —Å–ø–∏—Å–∫–µ, —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –Ω–µ –∞–∫—Ç–∏–≤–Ω–æ.')
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ sites.json:')
  }
})()

function addButton(playList) {
  const button = document.createElement('div')
  button.classList.add('book-download-load-button')
  button.innerHTML = `<button type="button" data-action="book-download-load-play-list">–ö–Ω–æ–ø–∫–∞</button>`
  document.body.appendChild(button)
  button.addEventListener('click', (event) => {
    const target = event.target.closest('[data-action="book-download-load-play-list"]')
    if(target) {
      loadPlayList(playList)
    }
  })
}


function loadPlayList(playList) {
  if (!Array.isArray(playList) || playList.length === 0) {
    console.warn('‚ö†Ô∏è –ü–ª–µ–π–ª–∏—Å—Ç –ø—É—Å—Ç –∏–ª–∏ –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π.')
    return
  }

  console.log('üîπ –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–ª–µ–π–ª–∏—Å—Ç–∞ –≤ background:', playList)

  chrome.runtime.sendMessage({ action: 'downloadPlaylist', playList }, (response) => {
    if (chrome.runtime.lastError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ:', chrome.runtime.lastError)
    } else {
      console.log('‚úÖ –û—Ç–≤–µ—Ç –æ—Ç background:', response)
    }
  })
}

async function getPlayList(handlerName) {
  return await this[handlerName]()
}

function knigavuheHandler() {
  const scripts = document.querySelectorAll('script')
  for (let script of scripts) {
    if (script.textContent.includes("BookController.enter")) {
      const match = script.textContent.match(/BookController\.enter\((\{.*?\})\);/s)
      if (match) {
        try {
          const bookData = JSON.parse(match[1])
          return bookData.playlist
        } catch (error) {
          console.error('–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ playlist:', error)
        }
      }
    }
  }
}

async function knigoraiHandler() {
  const id = new URL(location.href).pathname.split('/').pop()
  if(!id || isNaN(Number(id))) {
    return
  }
  const url = `https://knigorai.com/books/${id}/playlist.txt`
  try {
    const response = await fetch(url)

    if (!response.ok) {
      throw new Error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: ${response.status} ${response.statusText}`)
    }

    const text = await response.text()
    console.log("üìú –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–ª–µ–π–ª–∏—Å—Ç–∞:", text)

    const playList = parsePlaylist(text);
    console.log("üéµ –†–∞—Å–ø–∞—Ä—Å–µ–Ω–Ω—ã–π –ø–ª–µ–π–ª–∏—Å—Ç:", playList)

    return playList;
  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–ª–µ–π–ª–∏—Å—Ç–∞:", error)
  }
}